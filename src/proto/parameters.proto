syntax = "proto2";

package TbotsProto;

import "proto/play.proto";
import "google/protobuf/descriptor.proto";

message ParameterRangeOptions
{
    optional double min_double_value = 1;
    optional double max_double_value = 2;
    optional int64 min_int_value     = 3;
    optional int64 max_int_value     = 4;
}

extend google.protobuf.FieldOptions
{
    optional ParameterRangeOptions range = 5000;
}

message ThunderbotsConfig
{
    required AiControlConfig ai_control_config           = 1;
    required AttackerTacticConfig attacker_tactic_config = 2;
}

message AiControlConfig
{
    // Whether we should run or stop ai
    required bool run_ai = 1;

    // If the enum exists, override the existing play
    // with the Play enum provided
    optional Play override_ai_play = 2;
}

message AttackerTacticConfig
{
    // The radius of the circle around a friendly robot around which
    // we think an enemy is about to steal the ball
    required double enemy_about_to_steal_ball_radius = 1
        [default = 0.1, (range).min_double_value = 0.0, (range).max_double_value = 4.0];

    // The minimum open angle to the goal that we require before taking a shot
    required double min_open_angle_for_shot_deg = 2
        [default = 6.0, (range).min_double_value = 0.0, (range).max_double_value = 90.0];
}

message CornerKickPlayConfig
{
    // The maximum time that we will wait before committing to a pass
    required double max_time_commit_to_pass_seconds = 1
        [default = 3.0, (range).min_double_value = 0.0, (range).max_double_value = 5.0];
}

// google.protobuf.Any defense_play_config = 4;
// google.protobuf.Any enemy_capability_config = 5;
// google.protobuf.Any goalie_tactic_config = 6;
// google.protobuf.Any navigator_config = 7;
// google.protobuf.Any passing_config = 8;
// google.protobuf.Any robot_navigation_obstacle_config = 9;
// google.protobuf.Any shoot_or_pass_play_config = 10;
//}

// message SslSimulationConfig {
// int32 team_channel = 1;
// string network_interface = 2;
// string ssl_simulator_ip_address = 3;
// int32 ssl_simulator_port = 4;
//}

// message AiControlConfig {
// bool run_ai = 1;
// bool override_ai_play = 2;
// string current_ai_play = 3;
//}

// message StandaloneSimulatorConfig {
// int32 yellow_team_channel = 1;
// int32 blue_team_channel = 2;
// string network_interface = 3;
// string vision_ipv4_address = 4;
// int32 vision_port = 5;
//}

// message SimulatorConfig {
// double sliding_friction_acceleration = 1;
// double rolling_friction_acceleration = 2;
// double ball_restitution = 3;
//}

// message HandheldControllerConfig {
// int32 robot_id = 1;
// double kick_speed_meters_per_second = 2;
// double chip_distance_meters = 3;
// int32 dribbler_rpm = 4;
// double max_linear_speed = 5;
// double max_angular_speed = 6;
// string device_path = 7;
//}

// message PassingConfig {
// double static_field_position_quality_x_offset = 1;
// double static_field_position_quality_y_offset = 2;
// double static_field_position_quality_friendly_goal_distance_weight = 3;
// double enemy_proximity_importance = 4;
// double ideal_max_rotation_to_shoot_degrees = 5;
// double min_pass_speed_m_per_s = 6;
// double max_pass_speed_m_per_s = 7;
// double enemy_reaction_time = 8;
// int32 number_of_gradient_descent_steps_per_iter = 9;
//}

// message RobotNavigationObstacleConfig {
// double speed_scaling_factor = 1;
// double robot_obstacle_inflation_factor = 2;
// double allowed_robot_collision_speed = 3;
//}

// message RobotDiagnosticsMainCommandLineArgs {
// string backend = 1;
// string interface = 2;
// string runtime_dir = 3;
//}

// message BackendConfig {
// google.protobuf.Any wifi_backend_config = 1;
// google.protobuf.Any simulator_backend_config = 2;
// google.protobuf.Any full_system_main_command_line_args = 3;
//}

// message StandaloneSimulatorMainCommandLineArgs {
// string interface = 1;
// string logging_dir = 2;
// string ssl_division = 3;
// string runtime_dir = 4;
//}

// message NetworkLogListenerMainCommandLineArgs {
// string interface = 1;
// int32 channel = 2;
//}

// message TbotsGtestMainCommandLineArgs {
// bool enable_visualizer = 1;
// bool stop_ai_on_start = 2;
// string runtime_dir = 3;
// double test_speed = 4;
//}

// message GoalieTacticConfig {
// double goalie_final_speed = 1;
// double ball_speed_panic = 2;
// double block_cone_radius = 3;
// double defense_area_deflation = 4;
//}

// message SslSimulationMainCommandLineArgs {
// string interface = 1;
// string logging_dir = 2;
// string ssl_division = 3;
// string team_colour = 4;
// int32 yellow_team_channel = 5;
// int32 blue_team_channel = 6;
// string ssl_ip_addr = 7;
// int32 ssl_yellow_team_port = 8;
// int32 ssl_blue_team_port = 9;
//}

// message EnemyCapabilityConfig {
// bool enemy_team_can_pass = 1;
//}

// message ShootOrPassPlayConfig {
// double abs_min_pass_score = 1;
// double pass_score_ramp_down_duration = 2;
//}

// message WifiBackendConfig {
// google.protobuf.Any network_config = 1;
// google.protobuf.Any sensor_fusion_config = 2;
// google.protobuf.Any arduino_config = 3;
//}

// message NavigatorConfig {
// double transition_speed_factor = 1;
// double enemy_robot_proximity_limit = 2;
//}

// message SslCommunicationConfig {
// string vision_ipv4_address = 1;
// int32 vision_port = 2;
// string game_controller_ipv4_address = 3;
// int32 game_controller_port = 4;
//}

// message FullSystemMainCommandLineArgs {
// google.protobuf.Any arduino_config = 1;
// string backend = 2;
// string interface = 3;
// bool headless = 4;
// string proto_log_output_dir = 5;
// string replay_input_dir = 6;
// string runtime_dir = 7;
// int32 channel = 8;
// string team_color = 9;
// string defending_side = 10;
//}

// message AttackerTacticConfig {
// double enemy_about_to_steal_ball_radius = 1;
// double min_open_angle_for_shot_deg = 2;
//}

// message SimulatorBackendConfig {
// google.protobuf.Any network_config = 1;
// google.protobuf.Any sensor_fusion_config = 2;
//}

// message ArduinoConfig {
// string port = 1;
//}

// message RobotCapabilitiesConfig {
// string broken_dribblers = 1;
// string broken_chippers = 2;
// string broken_kickers = 3;
//}

// message SensorFusionConfig {
// bool vision_flipping_filter_enabled = 1;
// bool ignore_invalid_camera_data = 2;
// double min_valid_x = 3;
// double max_valid_x = 4;
// int32 friendly_goalie_id = 5;
// int32 enemy_goalie_id = 6;
// bool override_game_controller_defending_side = 7;
// bool defending_positive_side = 8;
// bool friendly_color_yellow = 9;
// bool override_game_controller_friendly_goalie_id = 10;
// bool override_game_controller_enemy_goalie_id = 11;
// bool override_referee_command = 12;
// string current_referee_command = 13;
// string previous_referee_command = 14;
//}

// message DefensePlayConfig {
// double immediate_threat_distance = 1;
//}

// message NetworkConfig {
// google.protobuf.Any ssl_communication_config = 1;
// int32 channel = 2;
// string network_interface = 3;
//}

// message ThunderbotsConfig {
// google.protobuf.Any full_system_main_command_line_args = 1;
// google.protobuf.Any corner_kick_play_config = 2;
// google.protobuf.Any goalie_tactic_config = 3;
// google.protobuf.Any robot_capabilities_config = 4;
// google.protobuf.Any standalone_simulator_main_command_line_args = 5;
// google.protobuf.Any ssl_communication_config = 6;
// google.protobuf.Any robot_diagnostics_main_command_line_args = 7;
// google.protobuf.Any attacker_tactic_config = 8;
// google.protobuf.Any shoot_or_pass_play_config = 9;
// google.protobuf.Any network_config = 10;
// google.protobuf.Any passing_config = 11;
// google.protobuf.Any backend_config = 12;
// google.protobuf.Any network_log_listener_main_command_line_args = 13;
// google.protobuf.Any enemy_capability_config = 14;
// google.protobuf.Any navigator_config = 15;
// google.protobuf.Any wifi_backend_config = 16;
// google.protobuf.Any arduino_config = 17;
// google.protobuf.Any standalone_simulator_config = 18;
// google.protobuf.Any handheld_controller_config = 19;
// google.protobuf.Any tbots_gtest_main_command_line_args = 20;
// google.protobuf.Any defense_play_config = 21;
// google.protobuf.Any ai_control_config = 22;
// google.protobuf.Any ssl_simulation_config = 23;
// google.protobuf.Any robot_navigation_obstacle_config = 24;
// google.protobuf.Any simulator_backend_config = 25;
// google.protobuf.Any ssl_simulation_main_command_line_args = 26;
// google.protobuf.Any ai_config = 27;
// google.protobuf.Any sensor_fusion_config = 28;
// google.protobuf.Any simulator_config = 29;
//}
